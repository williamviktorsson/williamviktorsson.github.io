import{i as L,f as a,t as r,j as d,k as e,g as N}from"../chunks/disclose-version.BmIQt7z6.js";import{P as te,S as c,T as g,C as u}from"../chunks/content.DTFQcm-x.js";import{F as ae}from"../chunks/front.DnDuSa6w.js";import{S as re}from"../chunks/split.B0OcPuxR.js";var se=r('<ol><li class="fragment">Repetition: Förväntade studieresultat</li> <li class="fragment">Repetition: Dart vs. Flutter</li> <li class="fragment">Repetition: Examinerande uppgifter</li> <li class="fragment">Uppstart Flutter</li> <ul><li class="fragment">Installation</li> <li class="fragment">Projektstruktur</li> <li class="fragment">Emulator</li> <li class="fragment">Widgets</li> <li class="fragment">Material Design</li> <li class="fragment">BuildContext</li></ul></ol>'),ne=r("<!> <!>",5),ie=r('<ol><li class="fragment">Dart</li> <ul><li class="fragment">Grundläggande Dart syntax</li> <li class="fragment">Strukturer, variabler, funktioner, iterering</li> <li class="fragment"><strong>Objektorientering, datahantering, asynkrona anrop & datamodellering i Dart</strong></li></ul> <li class="fragment">Flutter</li> <ul><li class="fragment">State Management, Arkitektur</li> <li class="fragment">Widgets, layouter, animationer</li> <li class="fragment">Firebase plattform</li> <li class="fragment">Designa och skapa användarvänliga UI</li> <li class="fragment">Testa och distribuera mobilappar på olika plattformar</li> <li class="fragment"><strong>Skicka och ta emot data från servrar och molntjänster via API</strong></li> <li class="fragment"><strong>Hantera notiser och interaktioner med serverlösa molnfunktioner</strong></li> <li class="fragment"><strong>Interagera med hårdvaru-API:er i native-applikationer</strong></li> <li class="fragment"><strong>Använda populära, avancerade tredjeparts-bibliotek</strong></li></ul></ol>'),oe=r("<!> <!>",5),de=r(`<ol><li class="fragment">Dart</li> <ul><li class="fragment">Modernt, objektorienterat programmeringsspråk utvecklat av Google</li> <li class="fragment">Kompilerar till ARM, x64, JavaScript, WebAssembly för plattformsoberoende utveckling
						(hybridutveckling?)</li> <li class="fragment">Stöder webb, mobil och desktop-applikationer</li></ul> <li class="fragment">Flutter</li> <ul><li class="fragment">UI-ramverk för applikationsutveckling, driven av Dart</li> <li class="fragment">Omfattande bibliotek av vy-komponenter(widgets)</li> <li class="fragment">Open source med aktiv community och support från Google</li></ul> <li class="fragment">Förhållande</li> <ul><li class="fragment">Dart är grunden för Flutter, ger språket och exekveringsmiljö?(runtime)</li> <li class="fragment">Flutter utökar Darts kapacitet för effektiv och flexibel UI-utveckling</li> <li class="fragment">Tillsammans möjliggör de snabb utveckling av appar för flera plattformar</li></ul></ol>`),ce=r("<!> <!>",5),ge=r(`<ol><li class="fragment"><s>CLI i Dart för att CRUD [Personer, Fordon, Parkeringsplatser, Parkeringar]</s></li> <li class="fragment"><s>Utöka CLI till att bli ett HTTP API med databas. Separation av kod till klient +
						server.</s></li> <hr class="fragment"> <li class="fragment">CLI klienten skrotas och ersätts med en applikation i Flutter.</li> <li class="fragment">Refaktorisering av klientkoden till att nyttja populär state management lösning (bloc).</li> <li class="fragment">HTTP servern skrotas och ersätts med molntjänster i Firebase</li> <li class="fragment">Utökning av applikationen med schemaläggning och hantering av notiser.</li></ol>`),ue=r("<!> <!>",5),me=r('<ol><li class="fragment">Installation</li> <li class="fragment">Projektstruktur</li> <li class="fragment">Emulator</li> <li class="fragment">Widgets</li> <li class="fragment">Material Design</li> <li class="fragment">BuildContext</li></ol>'),fe=r("<!> <!>",5),ve=r('<div class="flex h-full items-center justify-center"><a href="https://docs.flutter.dev/get-started/install" class="font-mono text-2xl svelte-1322xwn">https://docs.flutter.dev/get-started/install</a></div>'),pe=r("<!> <!>",5),ke=r(`<ol><li class="fragment">Antaganden:</li> <ul><li class="fragment">Flutter SDK + Dart SDK installerat</li> <li class="fragment">Android Studio installerat</li> <li class="fragment">Utvecklingsmiljö för Android potentiellt inte konfigurerad.</li></ul> <li class="fragment">Uppmaning:</li> <ul><li class="fragment">Kör kommandot: <code class="svelte-1322xwn">flutter upgrade</code></li> <li class="fragment">Kör kommandot: <code class="svelte-1322xwn">flutter doctor</code> för att se om allt är konfigurerat för att kunna
						utveckla Android-appar</li></ul></ol>`),$e=r("<!> <!>",5),_e=r('<ol><li class="fragment">Öppna Android Studio</li> <li class="fragment">Följ dessa steg: <a href="https://docs.flutter.dev/get-started/install/windows/mobile#configure-android-development" class="svelte-1322xwn">https://docs.flutter.dev/get-started/install/windows/mobile#configure-android-development</a></li> <li class="fragment">Öppna <code class="svelte-1322xwn">SDK Manager</code> i Android Studio</li> <li class="fragment">Se till att du har följande under <code class="svelte-1322xwn">SDK Platforms</code> och <code class="svelte-1322xwn">SDK Tools</code></li> <ul><li class="fragment">Android SDK Platform, API 35.0.1 - <code class="svelte-1322xwn">Android 15.0 ("VanillaIceCream")</code></li> <li class="fragment">Android SDK Build-Tools</li> <li class="fragment">Android SDK Command-line Tools</li> <li class="fragment">Android Emulator</li> <li class="fragment">Android SDK Platform-Tools</li></ul></ol>'),he=r("<!> <!>",5),xe=r(`<ol><li class="fragment">Gör steg 1 här: <a href="https://docs.flutter.dev/get-started/install/windows/mobile#set-up-the-android-emulator" class="svelte-1322xwn">https://docs.flutter.dev/get-started/install/windows/mobile#set-up-the-android-emulator</a></li> <ul><li class="fragment">Här konfigurerar du så att ditt operativsystem stödjer att köra en virtuell emulator på
						bästa sätt. Följ instruktionerna för din plattform.</li> <li class="fragment">Jag rekommenderar <code class="svelte-1322xwn">AEHD</code> för Windows.</li> <li class="fragment">Mac bör fungera OOTB</li> <li class="fragment">Linux-användare följer guiden för KVM längre ned på sidan.</li> <li class="fragment">Följ sedan steg två till 16</li> <ul><li class="fragment">Välj <code class="svelte-1322xwn">VanillaIceCream med API = 35, Target = Google APIs</code> som System Image i
							steg 10</li> <li class="fragment">Rätt image kan ligga under x86_64 Images/Other Images/ARM Images(för er med ARM
							processor)</li></ul> <li class="fragment">Följ resterande steg på sidan.</li> <li class="fragment">Testa starta din emulator.</li> <li class="fragment">Du ska nu vara redo att utveckla mobilappar!</li></ul></ol>`),we=r("<!> <!>",5),Pe=r(`<ol><li class="fragment">Skapa ett nytt flutterprojekt i valfri mapp</li> <li class="fragment">Du kan ta bort detta projekt senare då du skapar nya projekt för uppgift tre i kursen.</li> <li class="fragment">Kör någon av följande kommandon:</li> <ul><li class="fragment"><code class="svelte-1322xwn">flutter create [projektnamn]</code> i terminalen</li> <li class="fragment"><code class="svelte-1322xwn">Flutter: New Project</code> i VSCode via Command Palette(ctrl+shift+p)</li></ul> <li class="fragment">Om du får en notis om att din gradle version är inte överensstämmer med din java-version,
					gör följande:</li> <ul><li class="fragment">Öppna mappen <code class="svelte-1322xwn">/android</code> i ditt nya projekt i Android Studio</li> <li class="fragment">Vänta tills du får popup för <code class="svelte-1322xwn">Start AGP Upgrade Assistant</code> och kör sedan igenom
						den</li> <li class="fragment">Läs mer här om det inte fungerar:</li> <ul><li class="fragment"><a href="https://docs.flutter.dev/release/breaking-changes/android-java-gradle-migration-guide" class="svelte-1322xwn">https://docs.flutter.dev/release/breaking-changes/android-java-gradle-migration-guide</a></li></ul></ul></ol>`),be=r("<!> <!>",5),je=r(`<ol><li class="fragment">Öppna hela flutterprojektet i VSCode</li> <li class="fragment">Längst ned till höger kan du välja devices. Välj din android emulator.</li> <ul><li class="fragment">Om VSCode inte lyckas koppla till emulatorn: Gå in i AVD Manager i Android Studio och:</li> <ul><li class="fragment">Öppna menyn på din device och välj <code class="svelte-1322xwn">Wipe Data</code></li></ul></ul> <li class="fragment">Öppna <code class="svelte-1322xwn">/lib/main.dart</code> i VSCode</li> <li class="fragment">Kör <code class="svelte-1322xwn">Run without debugging</code> från antingen play knappen uppe till höger eller run
					menyn längst upp i VSCode</li></ol>`),De=r("<!> <!>",5),Ae=r('<ol><li class="fragment"><code class="svelte-1322xwn">lib/</code></li> <ul><li class="fragment"><code class="svelte-1322xwn">main.dart</code> - Appens startpunkt</li> <li class="fragment">Bör fyllas med underkataloger som t.ex. <code class="svelte-1322xwn">widgets/</code>, <code class="svelte-1322xwn">models/</code>, <code class="svelte-1322xwn">views/</code> etc.</li></ul> <li class="fragment"><code class="svelte-1322xwn">assets/</code></li> <ul><li class="fragment">För bilder, ikoner, och andra statiska resurser</li> <li class="fragment">Du kan vara tvungen att skapa denna mapp själv</li> <ul><li class="fragment">Då får du specifiera sökvägen till mappen i din <code class="svelte-1322xwn">pubspec.yaml</code></li></ul></ul> <li class="fragment"><code class="svelte-1322xwn">pubspec.yaml</code></li> <ul><li class="fragment">Konfigurationsfil för projektet - Definierar beroenden och resurser</li></ul> <li class="fragment"><code class="svelte-1322xwn">test/</code></li> <ul><li class="fragment">Innehåller tester för appen</li></ul></ol> <ol start="5"><li class="fragment">Platform-specifika mappar - <stron>rörs sällan, kanske för config av SDK/API-nycklar</stron></li> <ul><li class="fragment"><code class="svelte-1322xwn">android/</code></li> <li class="fragment"><code class="svelte-1322xwn">ios/</code></li> <li class="fragment"><code class="svelte-1322xwn">linux/</code></li> <li class="fragment"><code class="svelte-1322xwn">macos/</code></li> <li class="fragment"><code class="svelte-1322xwn">web/</code></li> <li class="fragment"><code class="svelte-1322xwn">windows/</code></li></ul></ol>',1),Fe=r("<!> <!>",5),Se=r('<ol><li class="fragment">Följ installationshänvisningar</li> <ul><li class="fragment">Går även att använda fysisk enhet med usb-kabel</li> <li class="fragment">Går även över wifi med lite setup</li> <li class="fragment"><strong>För kursen:</strong> Android Studio - AVD Manager</li> <li class="fragment"><strong>För kursen:</strong> Web - Chrome/Edge</li> <li class="fragment"><strong>För kursen:</strong> Desktop (macOS/Windows/Linux)</li></ul></ol>'),ye=r("<!> <!>",5),Ie=r('<ol><li class="fragment">Grundsten</li> <ul><li class="fragment">Allt visuellt i Flutter är en <code class="svelte-1322xwn">Widget</code></li> <li class="fragment">Byggstenar för användargränssnittet</li> <li class="fragment">Använd existerande eller bygg egna</li> <li class="fragment">En Widget är en Dart <code class="svelte-1322xwn">class</code> som kan <code class="svelte-1322xwn">extend</code>as</li></ul> <li class="fragment">Det finns många existerande Widgets</li> <ul><li class="fragment">T.ex. <code class="svelte-1322xwn">Text</code>, <code class="svelte-1322xwn">Row</code>, <code class="svelte-1322xwn">Column</code>, <code class="svelte-1322xwn">Scaffold</code></li></ul> <li class="fragment">Egenskaper</li> <ul><li class="fragment">Widgetar har egenskaper (properties/klassvariabler)</li> <li class="fragment">Bestämmer widgetens utseende och beteende</li> <li class="fragment">Kan finnas en del <code class="svelte-1322xwn">defaults</code> som du kan välja att själv konfigurera</li></ul></ol>'),Ce=r("<!> <!>",5),Te=r(`<ol><li class="fragment">Kombinera Widgetar</li> <ul><li class="fragment">Widgetar kan inneslutas i andra widgetar. Ofta säger man att en widget kan ha ett <code class="svelte-1322xwn">child</code></li> <li class="fragment">Nästlade widgetar skapar en <code class="svelte-1322xwn">widget tree structure</code>, går att se över i
						DevTools</li></ul> <li class="fragment">Återanvändning</li> <ul><li class="fragment">Möjlighet att återanvända och anpassa widgetar</li> <li class="fragment">Skapar konsekvent och återanvändbart UI</li> <li class="fragment">Notera: Detta är inte en kurs i att skapa designsystem.</li> <ul><li class="fragment">Vi kommer använda Material Design som är Googles egna designsystem.</li> <li class="fragment">Men vi kan absolut göra ändringar till de Widgets vi får från Material Design.</li> <li class="fragment">Eller skapa egna från grundkomponenterna i Flutter.</li></ul></ul></ol>`),Ke=r("<!> <!>",5),Be=r('<ol><li class="fragment">Designsystem skapat av Google</li> <ul><li class="fragment">Riktlinjer för skapande av visuellt sammanhängande appar</li></ul> <li class="fragment">Material Widgets</li> <ul><li class="fragment">Flutter levererar inbyggda Material Design-widgets</li> <li class="fragment">T.ex. <code class="svelte-1322xwn">AppBar</code>, <code class="svelte-1322xwn">FlatButton</code>, <code class="svelte-1322xwn">Card</code></li></ul> <li class="fragment">Interaktion & Rörelse</li> <ul><li class="fragment">Animeringar och övergångar för bättre användarupplevelse</li> <li class="fragment">Ripple-effekter, skuggor, med mera.</li></ul> <li class="fragment">Teman</li> <ul><li class="fragment">Möjlighet att skapa och tillämpa egna teman</li> <li class="fragment">Konsistent färgschema och typografi</li></ul></ol>'),We=r("<!> <!>",5),Re=r('<ol><li class="fragment">Definition</li> <ul><li class="fragment">En referens till widgetens plats i widget-trädet</li> <li class="fragment">Innehåller information som tillhör widgetens specifika plats i widget-trädet</li></ul> <li class="fragment">Varför det är viktigt</li> <ul><li class="fragment">Används för injection av state, styling och routing till Widgets.</li> <li class="fragment">Används ofta i byggmetoder (<code class="svelte-1322xwn">build</code>)</li> <ul><li class="fragment">När en Widget byggs kan den välja att läsa information från widgetens <strong>UNIKA</strong> BuildContext</li> <li class="fragment">En buildcontext skickas alltid med som argument till en widgets build-metod</li></ul></ul></ol>'),Me=r("<!> <!>",5),Ve=r('<ol><li class="fragment">Hierarki & Ägande</li> <ul><li class="fragment">Varje widget har sin egen BuildContext</li> <li class="fragment">Widgets skapar och ger sina barn en ny specifik BuildContext</li> <ul><li class="fragment">Sker automagiskt</li></ul></ul> <li class="fragment">Användningsfall</li> <ul><li class="fragment">Navigering mellan skärmar med <code class="svelte-1322xwn">Navigator.of(context)</code></li> <li class="fragment">Använda temadata med <code class="svelte-1322xwn">Theme.of(context)</code></li> <li class="fragment">Läsa värden från <code class="svelte-1322xwn">BLoC</code> eller andra state management-lösningar</li> <li class="fragment">Få information från föräldern t.ex. gällande hur stor en Widget kan bli.</li> <ul><li class="fragment">En förälder kan ha introducerat så kallade <code class="svelte-1322xwn">constraints</code> som påverkar barnen.</li></ul> <li class="fragment">Visa en popup som täcker widgeten eller skärmen.</li> <li class="fragment">Visa en <code class="svelte-1322xwn">Toast/Snackbar/Notis</code> som dyker upp i widgeten eller på hela skärmen.</li></ul></ol>'),Ue=r("<!> <!>",5),Ee=r('<ol><li class="fragment">Projektstruktur</li> <li class="fragment">Emulator</li> <li class="fragment">Widgets</li> <li class="fragment">Material Design</li> <li class="fragment">BuildContext</li></ol>'),Ge=r("<!> <!>",5),Le=r('<ul><li class="fragment">Dags att bygga grafiska gränssnitt till er parkeringsapplikation! 🎨</li> <li class="fragment">Vi ska bygga en Flutter-applikation för parkeringsanvändare (mobil/web/desktop)</li> <ul><li class="fragment">Användare ska kunna hantera</li> <li class="fragment">Parkeringsadministratörer får fortsätta använda ert CLI</li></ul> <li class="fragment">Samma server/backend som tidigare - men nytt användargränssnitt</li></ul>'),Ne=r("<!> <!>",5),Oe=r('<ol><li class="fragment"><strong>CLI</strong> - För parkeringsadministratörer</li> <ul><li class="fragment">Huvudfunktioner:</li> <ul><li class="fragment">Hantera parkeringsplatser (CRUD)</li></ul></ul> <li class="fragment"><strong>Flutter applikation</strong> - För bilister</li> <ul><li class="fragment">Optimerad för mobil + webb (portrait + landscape)</li> <li class="fragment">Huvudfunktioner:</li> <ul><li class="fragment">Registrera sig/logga in</li> <ul><li class="fragment">Förtydligande nästa slide</li></ul> <li class="fragment">Hantera fordon</li> <li class="fragment">Starta/stoppa parkering</li></ul> <li class="fragment">Använder förslagsvis <code class="svelte-1322xwn">NavigationBar</code> eller <code class="svelte-1322xwn">BottomAppBar</code> för navigation</li></ul></ol>'),He=r("<!> <!>",5),Je=r('<ul><li class="fragment">Förenklad lösning för denna uppgift! 🎯</li> <ul><li class="fragment">Ingen kryptering, salt, hash eller session tokens</li> <li class="fragment">Ingen "äkta" säkerhet krävs</li></ul> <li class="fragment">Implementera så här:</li> <ul><li class="fragment">Registrering = skapa en person i databasen</li> <li class="fragment">Inloggning = kolla om personen finns</li> <li class="fragment">Ska <strong>se ut</strong> som ett inloggningsflöde för användaren</li></ul> <li class="fragment">Riktig autentisering kommer senare! 🔒</li> <ul><li class="fragment">Vi implementerar Firebase Auth i senare uppgift</li> <li class="fragment">Då kopplar vi Firebase-tokens till era personer</li></ul></ul>'),qe=r("<!> <!>",5),ze=r('<ol><li class="fragment">Börja med att skapa projektet:</li> <ul><li class="fragment"><code class="svelte-1322xwn">flutter create parking_user</code></li></ul> <li class="fragment">Fokusera på grundläggande UI först:</li> <ul><li class="fragment">Sätt upp navigation (BottomAppBar/NavigationBar/NavigationRail)</li> <li class="fragment">Skapa tomma vyer för huvudfunktionerna</li> <li class="fragment">Experimentera med olika widgets (knappar, listor, formulär)</li> <li class="fragment">Använd hårdkodad data - ingen serveranslutning än</li></ul></ol>'),Qe=r("<!> <!>",5),Xe=r('<ul><li class="fragment">Denna vecka (v.11): Grundläggande UI och navigation</li> <li class="fragment">Nästa vecka (v.12): Layouts och serverintegration</li> <li class="fragment">v.13: Forms och datahantering</li> <li class="fragment">v.14: State management och responsive design</li> <li class="fragment">v.15: Examination</li> <hr class="fragment"> <li class="fragment"><strong>Fullständig uppgiftsbeskrivning finns på Teams</strong></li> <li class="fragment">Fokusera på att få grundstrukturen på plats denna vecka! 🎯</li></ul>'),Ye=r("<!> <!>",5),Ze=r('<div class="mt-60 text-center">Det var allt för idag!</div>'),el=r("<!> <!>",5),ll=r('<!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <div class="date svelte-1322xwn"><p class="mb-2 text-xl" id="date"> </p> <p class="text-xl">Stockholms Tekniska Institut</p></div>',5);function dl(O){const H={year:"numeric",month:"long",day:"numeric"},J=new Date().toLocaleDateString("sv-SE",H);var v=L(!0),q=d(v);te(q,{options:{history:!0,transition:"slide",controls:!0,progress:!1,autoAnimateEasing:"ease",autoAnimateUnmatched:!0},children:(z,al)=>{var p=ll(),k=d(p);ae(k,{});var $=e(e(k,!0));c($,{children:(n,m)=>{var l=ne(),t=d(l);g(t,{title:"Dagens agenda"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=se();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var _=e(e($,!0));c(_,{children:(n,m)=>{var l=oe(),t=d(l);g(t,{title:"Repetition: Förväntade studieresultat"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=ie();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var h=e(e(_,!0));c(h,{children:(n,m)=>{var l=ce(),t=d(l);g(t,{title:"Repetition: Dart vs. Flutter"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=de();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var x=e(e(h,!0));c(x,{children:(n,m)=>{var l=ue(),t=d(l);g(t,{title:"Repetition: Examinerande uppgifter"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=ge();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var w=e(e(x,!0));c(w,{children:(n,m)=>{var l=fe(),t=d(l);g(t,{title:"Uppstart Flutter"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=me();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var P=e(e(w,!0));c(P,{children:(n,m)=>{var l=pe(),t=d(l);g(t,{title:"Installation: ~ 30-60 minuter"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=ve();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var b=e(e(P,!0));c(b,{children:(n,m)=>{var l=$e(),t=d(l);g(t,{title:"Installation - fortsättning"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=ke();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var j=e(e(b,!0));c(j,{children:(n,m)=>{var l=he(),t=d(l);g(t,{title:"Utvecklingsmiljö för Android"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=_e();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var D=e(e(j,!0));c(D,{children:(n,m)=>{var l=we(),t=d(l);g(t,{title:"Utvecklingsmiljö för Android - fortsättning"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=xe();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var A=e(e(D,!0));c(A,{children:(n,m)=>{var l=be(),t=d(l);g(t,{title:"Skapa exempelprojekt"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=Pe();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var F=e(e(A,!0));c(F,{children:(n,m)=>{var l=De(),t=d(l);g(t,{title:"Starta exempelprojekt"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=je();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var S=e(e(F,!0));c(S,{children:(n,m)=>{var l=Fe(),t=d(l);g(t,{title:"Flutter Projektstruktur"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=L(!0),Z=d(s);re(Z,{children:(ee,rl)=>{var le=Ae();a(ee,le)},$$slots:{default:!0}}),a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var y=e(e(S,!0));c(y,{children:(n,m)=>{var l=ye(),t=d(l);g(t,{title:"Emulator"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=Se();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var I=e(e(y,!0));c(I,{children:(n,m)=>{var l=Ce(),t=d(l);g(t,{title:"Flutter Widgets Koncept"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=Ie();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var C=e(e(I,!0));c(C,{children:(n,m)=>{var l=Ke(),t=d(l);g(t,{title:"Flutter Widgets Koncept - fortsättning"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=Te();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var T=e(e(C,!0));c(T,{children:(n,m)=>{var l=We(),t=d(l);g(t,{title:"Material Design i Flutter"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=Be();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var K=e(e(T,!0));c(K,{children:(n,m)=>{var l=Me(),t=d(l);g(t,{title:"BuildContext i Flutter"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=Re();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var B=e(e(K,!0));c(B,{children:(n,m)=>{var l=Ue(),t=d(l);g(t,{title:"BuildContext i Flutter - fortsättning"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=Ve();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var W=e(e(B,!0));c(W,{children:(n,m)=>{var l=Ge(),t=d(l);g(t,{title:"Demo time? Check check?"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=Ee();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var R=e(e(W,!0));c(R,{children:(n,m)=>{var l=Ne(),t=d(l);g(t,{title:"Uppgift 3: Flutter Parkeringsapp"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=Le();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var M=e(e(R,!0));c(M,{children:(n,m)=>{var l=He(),t=d(l);g(t,{title:"Två separata klienter"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=Oe();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var V=e(e(M,!0));c(V,{children:(n,m)=>{var l=qe(),t=d(l);g(t,{title:"Om inloggning/autentisering"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=Je();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var U=e(e(V,!0));c(U,{children:(n,m)=>{var l=Qe(),t=d(l);g(t,{title:"Kom igång denna vecka"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=ze();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var E=e(e(U,!0));c(E,{children:(n,m)=>{var l=Ye(),t=d(l);g(t,{title:"Kommande veckor"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=Xe();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var G=e(e(E,!0));c(G,{children:(n,m)=>{var l=el(),t=d(l);g(t,{title:"Tack för idag!"});var i=e(e(t,!0));u(i,{children:(o,f)=>{var s=Ze();a(o,s)},$$slots:{default:!0}}),a(n,l)},$$slots:{default:!0}});var Q=e(e(G,!0)),X=N(Q),Y=N(X);Y.nodeValue=J,a(z,p)},$$slots:{default:!0}}),a(O,v)}export{dl as component};
